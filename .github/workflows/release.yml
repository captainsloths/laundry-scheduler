name: Build and Release

on:
  pull_request:
    types: [closed]
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - 'handlers/**'
      - 'models/**'
      - 'static/**'
      - 'templates/**'
      - '.github/workflows/**'
      - '!README.md'
      - '!**/*.md'
      - '!docs/**'
  workflow_dispatch:

permissions:
  contents: write  # Only needed for creating releases and uploading assets
  packages: write  # Needed for publishing to GHCR

jobs:
  build:
    runs-on: ubuntu-latest
    # Only run if the PR was actually merged (not just closed)
    if: github.event.pull_request.merged == true
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'



    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.actor }}/laundry-scheduler
        tags: |
          type=raw,value=v${{ github.run_number }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Create release notes
      run: |
        cat > release-notes.md << 'EOF'
        ## Laundry Queue Manager v${{ github.run_number }}
        
        ### What's New
        - 🐳 Docker container support
        - 🌙 Dark mode toggle
        - 🚀 Automated releases
        
        ### Docker Image
        
        **Image**: `ghcr.io/${{ github.repository }}:v${{ github.run_number }}`
        
        **⚠️ Important**: Always use versioned tags (v1, v2, etc.) in production. The `latest` tag should only be used for development/testing.
        
        ### Quick Start
        
        ```bash
        # Pull the image (use specific version)
        docker pull ghcr.io/${{ github.repository }}:v${{ github.run_number }}
        
        # Run the container
        docker run -p 8080:8080 ghcr.io/${{ github.repository }}:v${{ github.run_number }}
        ```
        
        ### Docker Compose
        
        ```yaml
        version: '3.8'
        services:
          laundry-scheduler:
            image: ghcr.io/${{ github.repository }}:v${{ github.run_number }}
            ports:
              - "8080:8080"
            restart: unless-stopped
        ```
        
        The application will be available at http://localhost:8080
        
        ### Features
        - 📱 Responsive web interface
        - 🌙 Dark/Light mode toggle
        - ⏰ Real-time laundry queue management
        - 🔄 Auto-cleanup of completed items
        EOF

    - name: Create GitHub Release
      run: |
        gh release create v${{ github.run_number }} \
          --title "Release v${{ github.run_number }}" \
          --notes-file release-notes.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
